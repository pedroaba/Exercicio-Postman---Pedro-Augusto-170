{
	"info": {
		"_postman_id": "0114800b-45ee-4daf-af9b-45924c68e1ac",
		"name": "Exercicio Teste de API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "34866242"
	},
	"item": [
		{
			"name": "Character",
			"item": [
				{
					"name": "characters",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Contém o atributo info com as informações corretas\", function () {\r",
									"    const { info: { prev, next } } = pm.response.json();\r",
									"    \r",
									"    pm.expect(next).contains(\"?page=2\")\r",
									"    pm.expect(prev).to.eql(null);\r",
									"});\r",
									"pm.test(\"Retorna a quantidade certa por página (20 por página)\", function () {\r",
									"    const { results } = pm.response.json()\r",
									"\r",
									"    pm.expect(results.length).to.eql(20)\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rickandmortyapi.com/api/character",
							"protocol": "https",
							"host": [
								"rickandmortyapi",
								"com"
							],
							"path": [
								"api",
								"character"
							]
						}
					},
					"response": []
				},
				{
					"name": "characters Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"pm.test(\"Contém mensagem de erro quando não encontra a página\", function () {\r",
									"    const { error } = pm.response.json();\r",
									"\r",
									"    pm.expect(error).equal(\"There is nothing here\")\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rickandmortyapi.com/api/character?page=100",
							"protocol": "https",
							"host": [
								"rickandmortyapi",
								"com"
							],
							"path": [
								"api",
								"character"
							],
							"query": [
								{
									"key": "page",
									"value": "100"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Character Get Specific",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Retorna as informações corretas do personagem\", function () {\r",
									"    var { \r",
									"        id, \r",
									"        name, \r",
									"        location: {\r",
									"            name: locationName\r",
									"        },\r",
									"        origin: {\r",
									"            name: originName\r",
									"        }\r",
									"    } = pm.response.json();\r",
									"\r",
									"    pm.expect(id).to.eql(1);\r",
									"    pm.expect(name).equal(\"Rick Sanchez\")\r",
									"    pm.expect(locationName).equal(\"Citadel of Ricks\")\r",
									"    pm.expect(originName).equal(\"Earth (C-137)\")\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rickandmortyapi.com/api/character/1",
							"protocol": "https",
							"host": [
								"rickandmortyapi",
								"com"
							],
							"path": [
								"api",
								"character",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Character Get Specific NotFound",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Retorna mensagem de erro correta\", function () {\r",
									"    var { error } = pm.response.json();\r",
									"\r",
									"    pm.expect(error).equal(\"Character not found\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rickandmortyapi.com/api/character/1000",
							"protocol": "https",
							"host": [
								"rickandmortyapi",
								"com"
							],
							"path": [
								"api",
								"character",
								"1000"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Location",
			"item": [
				{
					"name": "Location List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"pm.test(\"Retorna a quantidade certa por página (20 por página)\", function () {\r",
									"    const { results } = pm.response.json()\r",
									"\r",
									"    pm.expect(results.length).to.eql(20)\r",
									"})\r",
									"\r",
									"pm.test(\"Ultimo elemento é a terra da Replacement Dimension\", function() {\r",
									"    const { results } = pm.response.json()\r",
									"    const lastLocation = results[19]\r",
									"\r",
									"    pm.expect(lastLocation.id).to.eql(20)\r",
									"    pm.expect(lastLocation.name).equal(\"Earth (Replacement Dimension)\") \r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rickandmortyapi.com/api/location",
							"protocol": "https",
							"host": [
								"rickandmortyapi",
								"com"
							],
							"path": [
								"api",
								"location"
							]
						}
					},
					"response": []
				},
				{
					"name": "Location Get Specific",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Contém os dados do planeta Terra da dimensão Replacement Dimension\", function () {\r",
									"    var { id, name } = pm.response.json();\r",
									"\r",
									"    pm.expect(id).to.eql(20)\r",
									"    pm.expect(name).equal(\"Earth (Replacement Dimension)\") \r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rickandmortyapi.com/api/location/20",
							"protocol": "https",
							"host": [
								"rickandmortyapi",
								"com"
							],
							"path": [
								"api",
								"location",
								"20"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Episodes",
			"item": [
				{
					"name": "Episodes List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"pm.test(\"Retorna a quantidade certa por página (20 por página)\", function () {\r",
									"    const { results } = pm.response.json()\r",
									"\r",
									"    pm.expect(results.length).to.eql(20)\r",
									"})\r",
									"\r",
									"pm.test(\"Ultimo elemento é o episódio Look Who's Purging Now\", function() {\r",
									"    const { results } = pm.response.json()\r",
									"    const lastEpisode = results[19]\r",
									"\r",
									"    pm.expect(lastEpisode.id).to.eql(20)\r",
									"    pm.expect(lastEpisode.name).equal(\"Look Who's Purging Now\") \r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rickandmortyapi.com/api/episode",
							"protocol": "https",
							"host": [
								"rickandmortyapi",
								"com"
							],
							"path": [
								"api",
								"episode"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Invalid API Route",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://rickandmortyapi.com/apis/episode",
					"protocol": "https",
					"host": [
						"rickandmortyapi",
						"com"
					],
					"path": [
						"apis",
						"episode"
					]
				}
			},
			"response": []
		}
	]
}